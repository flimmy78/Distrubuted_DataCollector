#include "OcciWrapper/Session.h"
#include "OcciWrapper/StatementImpl.h"

occiwrapper::Session::Session( shared_ptr< occiwrapper::Connection > pConnection, bool bAutoCommit, const string& strTag )
{
	m_bAutoCommit = bAutoCommit;
	m_pConnection = pConnection;
	m_strTag = strTag;
	m_pStatement = new occiwrapper::Statement(CreateStatementImpl());
}

shared_ptr< occiwrapper::StatementImpl > occiwrapper::Session::CreateStatementImpl()
{
	// TODO: check connection
	if( m_pConnection == NULL || m_pConnection->GetValidity() == INVALID )
	{
		return shared_ptr< occiwrapper::StatementImpl >();
	}

	return shared_ptr< occiwrapper::StatementImpl >( new occiwrapper::StatementImpl( this->m_pConnection->CreateStatement("",m_strTag),
		this->m_pConnection, this->m_bAutoCommit, m_strTag ) );
}

void occiwrapper::Session::Commit()
{
	if( m_pConnection != NULL )
	{
		this->m_pConnection->Commit(m_strTag);
	}
}

void occiwrapper::Session::SetAutoCommit( bool bAutoCommit )
{
	this->m_bAutoCommit = bAutoCommit;
}

void occiwrapper::Session::Rollback()
{
	if( m_pConnection != NULL )
	{
		this->m_pConnection->Rollback(m_strTag);
	}
}

occiwrapper::Session::~Session()
{
	if (m_pStatement != nullptr)
		delete m_pStatement;
}